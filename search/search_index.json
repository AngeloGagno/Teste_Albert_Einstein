{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Teste Albert Einstein - ETL","text":"<p>Bem-vindo \u00e0 documenta\u00e7\u00e3o t\u00e9cnica do sistema de ETL desenvolvido para o Teste Pr\u00e1tico do Albert Einstein.</p> <p>Este sistema realiza a extra\u00e7\u00e3o, transforma\u00e7\u00e3o e carga de dados (ETL) para um banco de dados SQL Server, com interface de upload e visualiza\u00e7\u00e3o via Streamlit.</p> <p>Utilize o menu lateral para navegar entre as se\u00e7\u00f5es t\u00e9cnicas: vis\u00e3o geral, detalhes do pipeline ETL, estrutura do banco de dados, frontend e instru\u00e7\u00f5es de configura\u00e7\u00e3o.</p>"},{"location":"banco_de_dados/","title":"Banco de Dados","text":"<p>O sistema utiliza um banco de dados SQL Server para armazenar os dados processados. A conex\u00e3o \u00e9 configurada via SQLAlchemy e as credenciais s\u00e3o definidas por vari\u00e1veis de ambiente.</p>"},{"location":"banco_de_dados/#modelos-principais","title":"Modelos Principais","text":""},{"location":"banco_de_dados/#diseasetable-diseasesummary","title":"DiseaseTable (<code>diseaseSummary</code>)","text":"<p>Tabela principal para dados de doen\u00e7as, com colunas para informa\u00e7\u00f5es demogr\u00e1ficas, localiza\u00e7\u00e3o, sintomas, condi\u00e7\u00f5es, vacina\u00e7\u00e3o, testes e datas relevantes.</p>"},{"location":"banco_de_dados/#districttable-municipios","title":"DistrictTable (<code>municipios</code>)","text":"<p>Tabela de munic\u00edpios baseada no IBGE, contendo c\u00f3digos e nomes de regi\u00f5es, estados e munic\u00edpios.</p>"},{"location":"banco_de_dados/#definicao-das-tabelas","title":"Defini\u00e7\u00e3o das Tabelas","text":"<p>Os modelos est\u00e3o definidos em <code>database/models.py</code> e s\u00e3o criados automaticamente pelos scripts do pipeline.</p> <p>Consulte o c\u00f3digo para detalhes de cada campo e tipos de dados. </p>"},{"location":"configuracao/","title":"Configura\u00e7\u00e3o","text":""},{"location":"configuracao/#requisitos","title":"Requisitos","text":"<ul> <li>Python 3.13+</li> <li>SQL Server (pode ser local ou em container Docker)</li> <li>Poetry (para gerenciamento de depend\u00eancias)</li> </ul>"},{"location":"configuracao/#instalacao","title":"Instala\u00e7\u00e3o","text":"<ol> <li>Clone o reposit\u00f3rio e acesse a pasta do projeto.</li> <li>Instale as depend\u00eancias:    <pre><code>poetry install\n</code></pre></li> <li>Copie o arquivo <code>env-example</code> para <code>.env</code> e preencha com as credenciais do banco:    <pre><code>DB_HOST=HOSTNAME\nDATABASE=master\nUSER=username\nPASSWORD=password\n</code></pre></li> </ol>"},{"location":"configuracao/#execucao","title":"Execu\u00e7\u00e3o","text":"<ul> <li>Para acessar o frontend para envio das cargas de dados:    Frontend</li> <li>Para inserir dados de munic\u00edpios:   <pre><code>poetry run python src/insert_municipios.py\n</code></pre></li> </ul>"},{"location":"etl/","title":"Pipeline ETL","text":""},{"location":"etl/#extracao","title":"Extra\u00e7\u00e3o","text":"<p>A extra\u00e7\u00e3o dos Munic\u00edpios realizada por meio da classe <code>GetFiles</code> em <code>extract/generic_csv_extracter.py</code>, que localiza e l\u00ea arquivos CSV de uma pasta espec\u00edfica e a extra\u00e7\u00e3o da tabela de doen\u00e7as \u00e9 feita por meio do Frontend</p>"},{"location":"etl/#transformacao","title":"Transforma\u00e7\u00e3o","text":"<p>A transforma\u00e7\u00e3o dos dados \u00e9 feita por pipelines dedicados: - <code>Pipeline_transform_disease_table</code> (em <code>transform/disease_table.py</code>): Limpa, padroniza e renomeia colunas dos dados de doen\u00e7as. - <code>Pipeline_transform_municipios_table</code> (em <code>transform/district_table.py</code>): Padroniza e limpa dados de munic\u00edpios. - Utiliza utilit\u00e1rios de limpeza em <code>transform/data_cleaner.py</code>.</p>"},{"location":"etl/#carga","title":"Carga","text":"<p>A carga dos dados \u00e9 feita utilizando o Streamlit que insere as Cargas de novos dados de doen\u00e7as tratadas na tabela do banco SQL Server.</p>"},{"location":"etl/#scripts-principais","title":"Scripts Principais","text":"<ul> <li><code>streamlit run main.py</code>: Executa o pipeline completo para dados de doen\u00e7as.</li> <li><code>insert_municipios.py</code>: Executa o pipeline para dados de munic\u00edpios.</li> </ul>"},{"location":"frontend/","title":"Frontend","text":"<p>A interface do sistema \u00e9 constru\u00edda com Streamlit, permitindo ao usu\u00e1rio:</p> <ul> <li>Fazer upload de arquivos CSV.</li> <li>Visualizar uma pr\u00e9via dos dados tratados.</li> <li>Inserir os dados no banco de dados com um clique.</li> </ul> <p>O frontend est\u00e1 implementado em <code>frontend/app.py</code> e \u00e9 integrado ao pipeline ETL. Para iniciar a interface, execute o script principal (<code>main.py</code>).</p> <p>A interface \u00e9 simples e intuitiva, voltada para facilitar o processo de ETL sem necessidade de conhecimento t\u00e9cnico em banco de dados. </p>"},{"location":"visao_geral/","title":"Vis\u00e3o Geral","text":"<p>Este sistema foi desenvolvido para processar e armazenar dados de sa\u00fade p\u00fablica, utilizando um pipeline ETL (Extra\u00e7\u00e3o, Transforma\u00e7\u00e3o e Carga) com as seguintes etapas principais:</p> <ul> <li>Extra\u00e7\u00e3o: Leitura de arquivos CSV contendo dados brutos.</li> <li>Transforma\u00e7\u00e3o: Limpeza, padroniza\u00e7\u00e3o e prepara\u00e7\u00e3o dos dados para o banco de dados.</li> <li>Carga: Inser\u00e7\u00e3o dos dados tratados em um banco SQL Server.</li> <li>Frontend: Interface web para upload, visualiza\u00e7\u00e3o e envio dos dados, constru\u00edda com Streamlit.</li> </ul> <p>A arquitetura \u00e9 modular, separando as responsabilidades em diferentes diret\u00f3rios:</p> <ul> <li> <p><code>extract/</code>: Extra\u00e7\u00e3o de arquivos CSV.</p> </li> <li> <p><code>transform/</code>: Pipelines de limpeza e transforma\u00e7\u00e3o de dados.</p> </li> <li> <p><code>database/</code>: Modelos e configura\u00e7\u00e3o do banco de dados.</p> </li> <li> <p><code>frontend/</code>: Interface de upload e visualiza\u00e7\u00e3o.</p> </li> </ul> <p>O sistema \u00e9 configur\u00e1vel via vari\u00e1veis de ambiente e utiliza o Poetry para gerenciamento de depend\u00eancias. </p>"}]}